{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","goodsList","isHidden","isReversed","sortBy","selectedLength","addItem","item","setState","prevState","removeItem","filter","good","clearSelections","selectTitle","length","slice","join","setVisibility","reverse","sortByName","sortByLength","reset","handleLength","event","target","value","this","title","visibleGoodsList","sort","g1","g2","localeCompare","className","hidden","type","onClick","onChange","map","key","classNames","selected","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.820e882d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: [],\n    goodsList: goodsFromServer,\n    isHidden: true,\n    isReversed: false,\n    sortBy: '',\n    selectedLength: 1,\n  }\n\n  addItem = (item) => {\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, item],\n    }));\n  }\n\n  removeItem = (item) => {\n    this.setState(prevState => ({\n      selectedGoods: prevState.selectedGoods.filter(good => good !== item),\n    }));\n  }\n\n  clearSelections = () => {\n    this.setState({ selectedGoods: [] });\n  }\n\n  selectTitle = () => {\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (selectedGoods.length === 1) {\n      return `${selectedGoods[0]} is selected`;\n    }\n\n    return `${selectedGoods.slice(0, -1).join(', ')}\n    and ${selectedGoods[selectedGoods.length - 1]} are selected`;\n  }\n\n  setVisibility = () => {\n    this.setState({\n      isHidden: false,\n    });\n  }\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  }\n\n  sortByName = () => {\n    this.setState({\n      sortBy: 'name',\n    });\n  }\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: 'length',\n    });\n  }\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: '',\n      selectedLength: 1,\n    });\n  }\n\n  handleLength = (event) => {\n    this.setState({ selectedLength: +event.target.value });\n  }\n\n  render() {\n    const { goodsList,\n      selectedGoods,\n      isHidden,\n      isReversed,\n      sortBy,\n      selectedLength } = this.state;\n    const title = this.selectTitle();\n    const visibleGoodsList = goodsList\n      .filter(good => good.length >= selectedLength);\n\n    visibleGoodsList.sort((g1, g2) => {\n      switch (sortBy) {\n        case 'name':\n          return g1.localeCompare(g2);\n        case 'length':\n          return g1.length - g2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoodsList.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {title}\n        </h1>\n        <h2>\n          {`Selected goods: ${selectedGoods.length}`}\n          <button\n            className=\"button button-list\"\n            hidden={selectedGoods.length === 0}\n            type=\"button\"\n            onClick={this.clearSelections}\n          >\n            X\n          </button>\n        </h2>\n        <div>\n          <button\n            type=\"button\"\n            className=\"button\"\n            hidden={!isHidden}\n            onClick={this.setVisibility}\n          >\n            Start\n          </button>\n          <button\n            type=\"button\"\n            className=\"button button-large\"\n            hidden={isHidden}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            className=\"button button-large\"\n            hidden={isHidden}\n            onClick={this.sortByName}\n          >\n            Sort alphabetically\n          </button>\n          <button\n            type=\"button\"\n            className=\"button button-large\"\n            hidden={isHidden}\n            onClick={this.reset}\n          >\n            Reset\n          </button>\n          <button\n            type=\"button\"\n            className=\"button button-large\"\n            hidden={isHidden}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n        </div>\n        <div hidden={isHidden} className=\"select\">\n          <span>Select length: </span>\n          <select value={selectedLength} onChange={this.handleLength}>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n            <option value=\"8\">8</option>\n            <option value=\"9\">9</option>\n            <option value=\"10\">10</option>\n          </select>\n        </div>\n        <ul hidden={isHidden}>\n          {visibleGoodsList.map(item => (\n            <li key={item} className=\"list__item\">\n              <span className={classNames(\n                { selected: selectedGoods.includes(item) },\n              )}\n              >\n                {item}\n              </span>\n              <button\n                className=\"button button-list\"\n                hidden={selectedGoods.includes(item)}\n                type=\"button\"\n                onClick={() => {\n                  this.addItem(item);\n                }}\n              >\n                Add\n              </button>\n              <button\n                className=\"button button-list\"\n                type=\"button\"\n                hidden={!selectedGoods.includes(item)}\n                onClick={() => {\n                  this.removeItem(item);\n                }}\n              >\n                Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}